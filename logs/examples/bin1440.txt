Context: 
* this file contains error and warning messages related to * serializer error handling . * * general notes to translators : * 1 ) a stylesheet is a description of how to transform an input xml document * into a resultant xml document ( or html document or text ) . the * stylesheet itself is described in the form of an xml document . * * 2 ) an element is a mark - up tag in an xml document ; an attribute is a * modifier on the tag . for example , in < elem attr = 'val' attr _ 2 = 'val2' > * " _ elem _ " is an element name , " _ attr _ " and " _ attr _ 2 _ " are attribute names with * the values " _ val _ " and " _ val _ 2 _ " , respectively . * * 3 ) a namespace declaration is a special attribute that is used to associate * a prefix with a uri ( the namespace ) . the meanings of element names and * attribute names that use that prefix are defined with respect to that * namespace . * * * / object [ ] [ ] get _ contents ( ) { object [ ] [ ] contents = new object [ ] [ ] { { msg _ key . bad _ msgkey , " _ ''{0}'' ''{1}'' ." } , { msg _ key . bad _ msgformat , " _ ''{1}'' ''{0}'' ." } , { msg _ key . er _ serializer _ not _ contenthandler , " _ ''{0}'' org.xml.sax.contenthandler ." } , { msg _ key . er _ resource _ could _ not _ find , " _ [ {0} ] .\n{1}" } , { msg _ key . er _ resource _ could _ not _ load , " _ [ {0} ] {1} \n {2} \t {3}() ." } , { msg _ key . er _ buffer _ size _ lessthan _ zero , " _ <=0" } , { msg _ key . er _ invalid _ utf _ 16 _ surrogate , " _ utf-16 (surrogate) : {0} ?" } , { msg _ key . er _ oierror , " _ io _ " } , { msg _ key . er _ illegal _ attribute _ position , " _ {0} . ." } , { msg _ key . er _ namespace _ prefix , " _ ''{0}'' ." } , { msg _ key . er _ stray _ attribute , " _ ''{0}'' ." } , { msg _ key . er _ stray _ namespace , " _ ''{0}''=''{1}'' ." } , { msg _ key . er _ could _ not _ load _ resource , " _ ''{0}''(classpath )() , ." } , { msg _ key . er _ illegal _ character , " _ {1} {0} . " } , { msg _ key . er _ could _ not _ load _ method _ property , " _ ''{1}'' (classpath ) ''{0}'' ." } , { msg _ key . er _ invalid _ port , " _ " } , { msg _ key . er _ port _ when _ host _ null , " _ (null) ." } , { msg _ key . er _ host _ address _ not _ wellformed , " _ ." } , { msg _ key . er _ scheme _ not _ conformant , " _ ." } , { msg _ key . er _ scheme _ from _ null _ string , " _ (null) ." } , { msg _ key . er _ path _ contains _ invalid _ escape _ sequence , " _ ." } , { msg _ key . er _ path _ invalid _ char , " _ : {0}" } , { msg _ key . er _ frag _ invalid _ char , " _ ." } , { msg _ key . er _ frag _ when _ path _ null , " _ (null) ." } , { msg _ key . er _ frag _ for _ generic _ uri , " _ uri ." } , { msg _ key . er _ no _ scheme _ in _ uri , " _ uri _ ." } , { PRED , " _ uri ." } , { msg _ key . er _ no _ fragment _ string _ in _ path , " _ ." } , { msg _ key . er _ no _ query _ string _ in _ path , " _ ." } , { msg _ key . er _ no _ port _ if _ no _ host , " _ ." } , { msg _ key . er _ no _ userinfo _ if _ no _ host , " _ userinfo ." } , { msg _ key . er _ xml _ version _ not _ supported , " _ : ''{0}''. xml . ''1.0'' ." } , { msg _ key . er _ scheme _ required , " _ ." } , { msg _ key . er _ factory _ property _ missing , " _ serializer _ factory _ ''{0}'' ." } , { msg _ key . er _ encoding _ not _ supported , " _ : ''{0}'' java runtime ." } , { msg _ key . er _ feature _ not _ found , " _ ''{0}'' ." } , { msg _ key . er _ feature _ not _ supported , " _ ''{0}'' ." } , { msg _ key . er _ string _ too _ long , " _ domstring : ''{0}'' " } , { msg _ key . er _ type _ mismatch _ err , " _ ." } , { msg _ key . er _ no _ output _ specified , " _ (null)." } , { msg _ key . er _ unsupported _ encoding , " _ ." } , { msg _ key . er _ unable _ to _ serialize _ node , " _ ." } , { msg _ key . er _ cdata _ sections _ split , " _ cdata _ ']]>' ." } , { msg _ key . er _ warning _ wf _ not _ checked , " _ well _ -formedness . well-formed true well-formedness ." } , { msg _ key . er _ wf _ invalid _ character , " _ ''{0}'' xml ." } , { msg _ key . er _ wf _ invalid _ character _ in _ comment , " _ xml (unicode: 0x{0}) . " } , { msg _ key . er _ wf _ invalid _ character _ in _ pi , " _ xml (unicode: 0x{0}) " } , { msg _ key . er _ wf _ invalid _ character _ in _ cdata , " _ cdata _ section _ xml (unicode: 0x{0}) . " } , { msg _ key . er _ wf _ invalid _ character _ in _ text , " _ xml (unicode: 0x{0}) . " } , { msg _ key . er _ wf _ invalid _ character _ in _ node _ name , " _ ''{1}'' {0} xml . " } , { msg _ key . er _ wf _ dash _ in _ comment , " _ \"--\" ." } , { msg _ key . er _ wf _ lt _ in _ attval , " _ \"{0}\" \"{1}\" ''<'' ." } , { msg _ key . er _ wf _ ref _ to _ unparsed _ ent , " _ \"&{0};\" . " } , { msg _ key . er _ wf _ ref _ to _ external _ ent , " _ \"&{0};\" . " } , { msg _ key . er _ ns _ prefix _ cannot _ be _ bound , " _ \"{0}\" \"{1}\" ." } , { msg _ key . er _ null _ local _ element _ name , " _ \"{0}\" (null)." } , { msg _ key . er _ null _ local _ attr _ name , " _ \"{0}\" (null)." } , { msg _ key . er _ elem _ unbound _ prefix _ in _ entref , " _ \"{0}\" \"{2}\"() \"{1}\" ." } , { msg _ key . er _ attr _ unbound _ prefix _ in _ entref , " _ \"{0}\" \"{2}\"() \"{1}\" ." } } ; return contents ; }
Ground truth: msg_key.er_cannot_init_uri_empty_parms
Syntactic prediction: msg_key.er_cannot_init_uri_empty_parms
Baseline prediction: msg_key.er_no_fragment_string_in_path

Context: 
resultant xml document ( or html document or text ) . the * stylesheet itself is described in the form of an xml document . * * 2 ) an element is a mark - up tag in an xml document ; an attribute is a * modifier on the tag . for example , in < elem attr = 'val' attr _ 2 = 'val2' > * " _ elem _ " is an element name , " _ attr _ " and " _ attr _ 2 _ " are attribute names with * the values " _ val _ " and " _ val _ 2 _ " , respectively . * * 3 ) a namespace declaration is a special attribute that is used to associate * a prefix with a uri ( the namespace ) . the meanings of element names and * attribute names that use that prefix are defined with respect to that * namespace . * * * / object [ ] [ ] get _ contents ( ) { object [ ] [ ] contents = new object [ ] [ ] { { msg _ key . bad _ msgkey , " _ ''{0}'' ''{1}'' ." } , { msg _ key . bad _ msgformat , " _ ''{1}'' ''{0}'' ." } , { msg _ key . er _ serializer _ not _ contenthandler , " _ ''{0}'' org.xml.sax.contenthandler ." } , { msg _ key . er _ resource _ could _ not _ find , " _ [ {0} ] .\n{1}" } , { msg _ key . er _ resource _ could _ not _ load , " _ [ {0} ] {1} \n {2} \t {3}() ." } , { msg _ key . er _ buffer _ size _ lessthan _ zero , " _ <=0" } , { msg _ key . er _ invalid _ utf _ 16 _ surrogate , " _ utf-16 (surrogate) : {0} ?" } , { msg _ key . er _ oierror , " _ io _ " } , { msg _ key . er _ illegal _ attribute _ position , " _ {0} . ." } , { msg _ key . er _ namespace _ prefix , " _ ''{0}'' ." } , { msg _ key . er _ stray _ attribute , " _ ''{0}'' ." } , { msg _ key . er _ stray _ namespace , " _ ''{0}''=''{1}'' ." } , { msg _ key . er _ could _ not _ load _ resource , " _ ''{0}''(classpath )() , ." } , { msg _ key . er _ illegal _ character , " _ {1} {0} . " } , { msg _ key . er _ could _ not _ load _ method _ property , " _ ''{1}'' (classpath ) ''{0}'' ." } , { msg _ key . er _ invalid _ port , " _ " } , { msg _ key . er _ port _ when _ host _ null , " _ (null) ." } , { msg _ key . er _ host _ address _ not _ wellformed , " _ ." } , { msg _ key . er _ scheme _ not _ conformant , " _ ." } , { msg _ key . er _ scheme _ from _ null _ string , " _ (null) ." } , { msg _ key . er _ path _ contains _ invalid _ escape _ sequence , " _ ." } , { msg _ key . er _ path _ invalid _ char , " _ : {0}" } , { msg _ key . er _ frag _ invalid _ char , " _ ." } , { msg _ key . er _ frag _ when _ path _ null , " _ (null) ." } , { msg _ key . er _ frag _ for _ generic _ uri , " _ uri ." } , { msg _ key . er _ no _ scheme _ in _ uri , " _ uri _ ." } , { msg _ key . er _ cannot _ init _ uri _ empty _ parms , " _ uri ." } , { msg _ key . er _ no _ fragment _ string _ in _ path , " _ ." } , { msg _ key . er _ no _ query _ string _ in _ path , " _ ." } , { msg _ key . er _ no _ port _ if _ no _ host , " _ ." } , { msg _ key . er _ no _ userinfo _ if _ no _ host , " _ userinfo ." } , { msg _ key . er _ xml _ version _ not _ supported , " _ : ''{0}''. xml . ''1.0'' ." } , { PRED , " _ ." } , { msg _ key . er _ factory _ property _ missing , " _ serializer _ factory _ ''{0}'' ." } , { msg _ key . er _ encoding _ not _ supported , " _ : ''{0}'' java runtime ." } , { msg _ key . er _ feature _ not _ found , " _ ''{0}'' ." } , { msg _ key . er _ feature _ not _ supported , " _ ''{0}'' ." } , { msg _ key . er _ string _ too _ long , " _ domstring : ''{0}'' " } , { msg _ key . er _ type _ mismatch _ err , " _ ." } , { msg _ key . er _ no _ output _ specified , " _ (null)." } , { msg _ key . er _ unsupported _ encoding , " _ ." } , { msg _ key . er _ unable _ to _ serialize _ node , " _ ." } , { msg _ key . er _ cdata _ sections _ split , " _ cdata _ ']]>' ." } , { msg _ key . er _ warning _ wf _ not _ checked , " _ well _ -formedness . well-formed true well-formedness ." } , { msg _ key . er _ wf _ invalid _ character , " _ ''{0}'' xml ." } , { msg _ key . er _ wf _ invalid _ character _ in _ comment , " _ xml (unicode: 0x{0}) . " } , { msg _ key . er _ wf _ invalid _ character _ in _ pi , " _ xml (unicode: 0x{0}) " } , { msg _ key . er _ wf _ invalid _ character _ in _ cdata , " _ cdata _ section _ xml (unicode: 0x{0}) . " } , { msg _ key . er _ wf _ invalid _ character _ in _ text , " _ xml (unicode: 0x{0}) . " } , { msg _ key . er _ wf _ invalid _ character _ in _ node _ name , " _ ''{1}'' {0} xml . " } , { msg _ key . er _ wf _ dash _ in _ comment , " _ \"--\" ." } , { msg _ key . er _ wf _ lt _ in _ attval , " _ \"{0}\" \"{1}\" ''<'' ." } , { msg _ key . er _ wf _ ref _ to _ unparsed _ ent , " _ \"&{0};\" . " } , { msg _ key . er _ wf _ ref _ to _ external _ ent , " _ \"&{0};\" . " } , { msg _ key . er _ ns _ prefix _ cannot _ be _ bound , " _ \"{0}\" \"{1}\" ." } , { msg _ key . er _ null _ local _ element _ name , " _ \"{0}\" (null)." } , { msg _ key . er _ null _ local _ attr _ name , " _ \"{0}\" (null)." } , { msg _ key . er _ elem _ unbound _ prefix _ in _ entref , " _ \"{0}\" \"{2}\"() \"{1}\" ." } , { msg _ key . er _ attr _ unbound _ prefix _ in _ entref , " _ \"{0}\" \"{2}\"() \"{1}\" ." } } ; return contents ; }
Ground truth: msg_key.er_scheme_required
Syntactic prediction: msg_key.er_scheme_required
Baseline prediction: msg_key.er_factory_property_missing

Context: 
* this file contains error and warning messages related to * serializer error handling . * * general notes to translators : * 1 ) a stylesheet is a description of how to transform an input xml document * into a resultant xml document ( or html document or text ) . the * stylesheet itself is described in the form of an xml document . * * 2 ) an element is a mark - up tag in an xml document ; an attribute is a * modifier on the tag . for example , in < elem attr = 'val' attr _ 2 = 'val2' > * " _ elem _ " is an element name , " _ attr _ " and " _ attr _ 2 _ " are attribute names with * the values " _ val _ " and " _ val _ 2 _ " , respectively . * * 3 ) a namespace declaration is a special attribute that is used to associate * a prefix with a uri ( the namespace ) . the meanings of element names and * attribute names that use that prefix are defined with respect to that * namespace . * * * / object [ ] [ ] get _ contents ( ) { object [ ] [ ] contents = new object [ ] [ ] { { msg _ key . bad _ msgkey , " _ ''{0}'' ''{1}'' " } , { msg _ key . bad _ msgformat , " _ ''{1}'' ''{0}'' " } , { msg _ key . er _ serializer _ not _ contenthandler , " _ ''{0}'' org.xml.sax.contenthandler " } , { msg _ key . er _ resource _ could _ not _ find , " _ [ {0} ] \n {1}" } , { msg _ key . er _ resource _ could _ not _ load , " _ [ {0} ] : {1} \n {2} \t {3}" } , { msg _ key . er _ buffer _ size _ lessthan _ zero , " _ <=0" } , { msg _ key . er _ invalid _ utf _ 16 _ surrogate , " _ utf-16 : {0} ?" } , { msg _ key . er _ oierror , " _ " } , { msg _ key . er _ illegal _ attribute _ position , " _ {0} " } , { msg _ key . er _ namespace _ prefix , " _ ''{0}'' " } , { msg _ key . er _ stray _ attribute , " _ ''{0}'' " } , { msg _ key . er _ stray _ namespace , " _ ''{0}''=''{1}'' " } , { msg _ key . er _ could _ not _ load _ resource , " _ ''{0}'' (classpath )" } , { msg _ key . er _ illegal _ character , " _ {1} {0} " } , { msg _ key . er _ could _ not _ load _ method _ property , " _ ''{1}'' ''{0}'' (classpath )" } , { msg _ key . er _ invalid _ port , " _ " } , { msg _ key . er _ port _ when _ host _ null , " _ " } , { msg _ key . er _ host _ address _ not _ wellformed , " _ " } , { msg _ key . er _ scheme _ not _ conformant , " _ " } , { msg _ key . er _ scheme _ from _ null _ string , " _ " } , { msg _ key . er _ path _ contains _ invalid _ escape _ sequence , " _ " } , { msg _ key . er _ path _ invalid _ char , " _ : {0} " } , { msg _ key . er _ frag _ invalid _ char , " _ " } , { PRED , " _ " } , { msg _ key . er _ frag _ for _ generic _ uri , " _ uri " } , { msg _ key . er _ no _ scheme _ in _ uri , " _ uri " } , { msg _ key . er _ cannot _ init _ uri _ empty _ parms , " _ uri _ " } , { msg _ key . er _ no _ fragment _ string _ in _ path , " _ " } , { msg _ key . er _ no _ query _ string _ in _ path , " _ " } , { msg _ key . er _ no _ port _ if _ no _ host , " _ " } , { msg _ key . er _ no _ userinfo _ if _ no _ host , " _ userinfo " } , { msg _ key . er _ xml _ version _ not _ supported , " _ : ''{0}'' xml ''1.0'' " } , { msg _ key . er _ scheme _ required , " _ " } , { msg _ key . er _ factory _ property _ missing , " _ serializer _ factory _ properties ''{0}'' " } , { msg _ key . er _ encoding _ not _ supported , " _ : ''{0}'' java " } , { msg _ key . er _ feature _ not _ found , " _ ''{0}'' " } , { msg _ key . er _ feature _ not _ supported , " _ ''{0}'' " } , { msg _ key . er _ string _ too _ long , " _ domstring : ''{0}''" } , { msg _ key . er _ type _ mismatch _ err , " _ " } , { msg _ key . er _ no _ output _ specified , " _ " } , { msg _ key . er _ unsupported _ encoding , " _ " } , { msg _ key . er _ unable _ to _ serialize _ node , " _ " } , { msg _ key . er _ cdata _ sections _ split , " _ cdata _ 1 ']]>' " } , { msg _ key . er _ warning _ wf _ not _ checked , " _ well-formed true " } , { msg _ key . er _ wf _ invalid _ character , " _ ''{0}'' xml " } , { msg _ key . er _ wf _ invalid _ character _ in _ comment , " _ xml (unicode: 0x{0}) " } , { msg _ key . er _ wf _ invalid _ character _ in _ pi , " _ xml (unicode: 0x{0}) " } , { msg _ key . er _ wf _ invalid _ character _ in _ cdata , " _ cdata _ xml (unicode: 0x{0}) " } , { msg _ key . er _ wf _ invalid _ character _ in _ text , " _ xml (unicode: 0x{0}) " } , { msg _ key . er _ wf _ invalid _ character _ in _ node _ name , " _ ''{1}'' {0} xml " } , { msg _ key . er _ wf _ dash _ in _ comment , " _ \"--\" " } , { msg _ key . er _ wf _ lt _ in _ attval , " _ \"{0}\" \"{1}\" ''<'' " } , { msg _ key . er _ wf _ ref _ to _ unparsed _ ent , " _ \"&{0};\" " } , { msg _ key . er _ wf _ ref _ to _ external _ ent , " _ \"&{0};\" " } , { msg _ key . er _ ns _ prefix _ cannot _ be _ bound , " _ \"{0}\" \"{1}\" " } , { msg _ key . er _ null _ local _ element _ name , " _ \"{0}\" " } , { msg _ key . er _ null _ local _ attr _ name , " _ \"{0}\" " } , { msg _ key . er _ elem _ unbound _ prefix _ in _ entref , " _ \"{0}\" \"{2}\" \"{1}\" " } , { msg _ key . er _ attr _ unbound _ prefix _ in _ entref , " _ \"{0}\" \"{2}\" \"{1}\" " } } ; return contents ; }
Ground truth: msg_key.er_frag_when_path_null
Syntactic prediction: msg_key.er_frag_when_path_null
Baseline prediction: msg_key.er_frag_invalid_char

